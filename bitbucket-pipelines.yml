#  WEBAPP REPO DEPLOY

# Prerequisites: $AWS_ACCESS_KEY_ID, $AWS_SECRET_ACCESS_KEY setup in the Deployment variables.
# For advanced cases, please, follow examples from the pipe's:
# README https://bitbucket.org/atlassian/aws-s3-deploy/src/master/README.md
# README https://bitbucket.org/atlassian/aws-cloudfront-invalidate/src/master/README.md

image: public.ecr.aws/sam/build-nodejs16.x:1.50.0

# Workflow Configuration

pipelines:
  default:
    - step:
        name: Linst and Test
        caches:
          - node
        script:
          - npm install
          - npm run lint
          - npm run lint:es
          # CI=true in default variables for Bitbucket Pipelines https://support.atlassian.com/bitbucket-cloud/docs/variables-in-pipelines/
          - npm test
  branches:
    main:
      - parallel:
        - step:
            name: Build
            caches:
              - node
            script:
              - npm install
              # CI=true in default variables for Bitbucket Pipelines https://support.atlassian.com/bitbucket-cloud/docs/variables-in-pipelines/
              - npm test
              - npm run build
            artifacts:
              - .next/**
        - step:
            name: Security Scan
            script:
              # Run a security scan for sensitive data.
              # See more security tools at https://bitbucket.org/product/features/pipelines/integrations?&category=security
              - pipe: atlassian/git-secrets-scan:0.5.1
      # - step:
      #     name: Deploy to Production
      #     deployment: Production
      #     trigger: manual
      #     clone:
      #       enabled: false
      #     script:
      #       # sync your files to S3
      #       - pipe: atlassian/aws-s3-deploy:1.1.0
      #         variables:
      #           AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
      #           AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
      #           AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
      #           S3_BUCKET: 'my-bucket-name'
      #           LOCAL_PATH: 'build'
      #       # triggering a distribution invalidation to refresh the CDN caches
      #       - pipe: atlassian/aws-cloudfront-invalidate:0.6.0
      #         variables:
      #           AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
      #           AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
      #           AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
      #           DISTRIBUTION_ID: '123xyz'
